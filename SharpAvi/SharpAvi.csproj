<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net45;net40;net35</TargetFrameworks>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <Version>2.2.0.0</Version>
    <Description>A simple library for creating video files in AVI format.</Description>
    <PackageDescription>
      If you want to render some video sequence, and do not want to touch DirectShow or depend on command-line utilities - SharpAvi may be what you need.
      
      Writing uncompressed AVI does not require any external dependencies, it's pure .NET code. Files are produced in compliance with the OpenDML extensions which allow (nearly) unlimited file size (no 2GB limit).
      
      Video is created by supplying individual in-memory bitmaps (byte arrays) and audio samples. Included are implementations of encoders for Motion JPEG, MPEG-4 (requires external VfW codecs) and MP3 (requires LAME binaries). Asynchronous writing/encoding is supported.
    </PackageDescription>
    <Authors>Vasili Maslov</Authors>
    <Company>Vasili Maslov</Company>
    <Copyright>Copyright © Vasili Maslov 2013-2019</Copyright>
    <PackageLicenseUrl>https://github.com/baSSiLL/SharpAvi/blob/master/LICENSE.md</PackageLicenseUrl>
    <PackageTags>AVI video authoring encoding OpenDML</PackageTags>
    <PackageProjectUrl>https://github.com/baSSiLL/SharpAvi</PackageProjectUrl>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp">
      <Version>3.3.1</Version>
    </PackageReference>
    <PackageReference Include="System.Drawing.Common">
      <Version>4.6.0</Version>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Codecs\LameFacadeImpl.cs" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Codecs\LameFacadeImpl.cs" />
  </ItemGroup>
  
</Project>
